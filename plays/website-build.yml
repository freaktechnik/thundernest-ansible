- name: Build and deploy website
  hosts: localhost
  connection: local
  gather_facts: false
  become: yes
  become_user: ansibler

  vars: 
    tbsite: "/tmp/tbsite-{{ branch | default('master') }}"
    tbsitebuild: "/tmp/tbsitebuild-{{ branch | default('master') }}"
    notes: "/thunderbird_notes"
    locale: "/locale"
    productdetails: "/product-details"
    branch: "master"
    
  tasks:
    - name: make sure temp dir is empty in case of previous failed build
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ tbsite }}"
        - "{{ tbsitebuild }}"

    - name: checkout tb-website-builds history repo
      git:
        repo: "https://github.com/thundernest/tb-website-builds.git"
        dest: "{{ tbsitebuild }}"
        version: "{{ branch | default('master') }}"
        depth: 1

    - name: checkout thunderbird-website
      git:
        repo: "https://github.com/thundernest/thunderbird-website.git"
        dest: "{{ tbsite }}"
        version: "{{ branch | default('master') }}"

    - name: checkout Mozilla localization files
      git:
        repo: "https://github.com/thundernest/thunderbird.net-l10n.git"
        dest: "{{ tbsite }}{{ locale }}"
        version: "master"
        depth: 1

    - name: checkout release notes
      git:
        repo: "https://github.com/thundernest/thunderbird-notes.git"
        dest: "{{ tbsite }}{{ notes }}"
        version: "{{ branch | default('master') }}"

    - name: checkout product-details
      git:
        repo: "https://github.com/mozilla-releng/product-details.git"
        dest: "{{ tbsite }}{{ productdetails }}"
        version: "production"

    - name: compile gettext files
      command: bash l10n_tools/compile.sh
      args:
        chdir: "{{ tbsite }}"

    - name: Install packages from requirements-dev.txt
      pip:
        requirements: "{{ tbsite }}/requirements-dev.txt"
        virtualenv: "{{ tbsite }}/siteenv"

    - name: run website build
      shell: "source {{ tbsite }}/siteenv/bin/activate && python build-site.py --debug"
      args:
        chdir: "{{ tbsite }}"

    - name: run start page build
      shell: "source {{ tbsite }}/siteenv/bin/activate && python build-site.py --startpage --debug"
      args:
        chdir: "{{ tbsite }}"

    - name: make sure temp dir is empty in case of previous failed build
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ tbsitebuild }}/site"
        - "{{ tbsitebuild }}/thunderbird.net"

    - name: copy built files to tb-website-builds directory
      command: "cp -R {{ item.src }} {{ item.dest }}"
      with_items:
        - { src: "{{ tbsite }}/thunderbird.net", dest: "{{ tbsitebuild }}/thunderbird.net" }
        - { src: "{{ tbsite }}/site", dest: "{{ tbsitebuild }}/site" }
        - { src: "{{ tbsite }}/wsgi.py", dest: "{{ tbsitebuild }}/wsgi.py" }
        - { src: "{{ tbsite }}/settings.py", dest: "{{ tbsitebuild }}/settings.py" }

    - name: commit website changes
      command: "{{ item }}"
      args:
        chdir: "{{ tbsitebuild }}"
      with_items:
        - "git add -A"
        - "git -c 'user.name=Thundernest Bot' -c 'user.email={{ lookup('env', 'GIT_EMAIL') }}' commit -m 'Website rebuild triggered by {{ message | default('manual execution of the script.') }}'"

    - name: push website update
      command: "git push https://{{ lookup('env', 'GIT_USER') | urlencode }}:{{ lookup('env', 'GIT_API_KEY') }}@github.com/thundernest/tb-website-builds.git --all"
      args:
        chdir: "{{ tbsitebuild }}"

    - name: clean up temporary site files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ tbsite }}"
        - "{{ tbsitebuild }}"
